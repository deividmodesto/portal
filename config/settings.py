"""
Django settings for config project.

Generated by 'django-admin startproject' using Django 5.2.5.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""
import os
from pathlib import Path
import environ
BASE_DIR = Path(__file__).resolve().parent.parent
env = environ.Env()
environ.Env.read_env(os.path.join(BASE_DIR, '.env'))

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-4+e#^n^o%buivlf6m%&gt*dep!otw44+jhcibrw!y3^%o577kw'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False

# Adicione seu domínio aqui
ALLOWED_HOSTS = ['172.16.1.223', 'localhost', '127.0.0.1', 'logistica.reunidaspontal.com.br']


# ==============================================================================
# === ADICIONE ESTA LINHA PARA CORRIGIR O ERRO CSRF (403) =======================
# ==============================================================================
CSRF_TRUSTED_ORIGINS = ['https://logistica.reunidaspontal.com.br']


# Application definition
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'portal',
]


MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'config.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
] 

WSGI_APPLICATION = 'config.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    # Esta é a nossa base de dados padrão, para escrita e leitura da aplicação
    'default': {
        'ENGINE': 'mssql',
        'NAME': 'logistica',
        'HOST': '172.16.1.223',
        'USER': 'sa',
        'PASSWORD': 'Rp@T3ch#50',
        'OPTIONS': {
            'driver': 'ODBC Driver 17 for SQL Server',
        },
    },
    # Esta é a nossa conexão de LEITURA para os dados do ERP
    'p12_bi': {
        'ENGINE': 'mssql',
        'NAME': 'P12_BI',
        'HOST': '172.16.1.223',
        'USER': 'sa',
        'PASSWORD': 'Rp@T3ch#50',
        'OPTIONS': {
            'driver': 'ODBC Driver 17 for SQL Server',
        },
    }
}

# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'pt-br'

TIME_ZONE = 'America/Sao_Paulo'

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# ROTEADOR DE BANCO DE DADOS
DATABASE_ROUTERS = ['portal.routers.P12Router']


# --- CONFIGURAÇÃO DE E-MAIL (PARA PRODUÇÃO) ---

# Backend para envio de e-mail via SMTP
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'

# Configurações do servidor Zoho (lidas do arquivo .env)
EMAIL_HOST = env('EMAIL_HOST')
EMAIL_PORT = env.int('EMAIL_PORT') # Usamos env.int() para converter a porta para número
EMAIL_HOST_USER = env('EMAIL_HOST_USER')
EMAIL_HOST_PASSWORD = env('EMAIL_HOST_PASSWORD')

# Zoho usa conexão SSL na porta 465
EMAIL_USE_SSL = True
EMAIL_USE_TLS = False

# Remetente padrão
DEFAULT_FROM_EMAIL = f"Portal de Coletas <{env('EMAIL_HOST_USER')}>"

# E-mail da sua equipe de logística para receber as notificações
LOGISTICA_EMAIL = 'paulo.edson@reunidaspontal.com.br' # <-- Altere se for diferente

STATIC_URL = 'static/'

# --- ADICIONE ESTE BLOCO ---
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static_dev'), # Renomeie a sua pasta 'static' atual para 'static_dev'
]

# Pasta para onde o Nginx irá olhar para encontrar os arquivos.
STATIC_ROOT = os.path.join(BASE_DIR, 'static')

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    # Adicione a linha abaixo
    'whitenoise.middleware.WhiteNoiseMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

